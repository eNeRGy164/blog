---
import BasePageLayout from '@/layouts/BasePageLayout.astro';
import ListItem from '@/components/ListItem.astro';
import { urlifyToken, getTagsWithPosts } from '@/js/util.js'
import { SITE_TITLE, SITE_DESCRIPTION } from '@/config.ts'

export interface Frontmatter { date: string; permalink: string; title: string; excerpt: string; updated?: string | null; }
export interface Post { frontmatter: Frontmatter; }
export interface Props { posts: Post[]; tag: string; }

const { posts } = Astro.props;

export async function getStaticPaths() {
  const tagsMap = getTagsWithPosts(await Astro.glob('../../posts/*.{md,mdx}'));
  
  return Array.from(tagsMap.entries()).map(([tag, tagPosts]) => ({
    params: { 
      slug: urlifyToken(tag) 
    },
    props: {
      tag: tag,
      posts: tagPosts,
    },
  }));
}
---

<BasePageLayout 
  title={`${Astro.props.tag} | ${SITE_TITLE}`} 
  description={SITE_DESCRIPTION} 
  classes={['archive']}
>
  <main id="content" itemprop="mainEntity" itemscope itemtype="http://schema.org/CollectionPage" itemref="author">
    <div class="post-box page-box">
      <div class="meta">
        <h1 id="pagetitle" itemprop="name">Posts tagged ‘{Astro.props.tag}’</h1>
      </div>
      <div>
        <div class="entries" itemscope itemtype="http://schema.org/ItemList" itemprop="mainEntity">
          <meta itemprop="itemListOrder" content="http://schema.org/ItemListOrderDescending">
          <ul>
            {posts.map(p => 
              <ListItem post={p} />
            )}
          </ul>
        </div>
      </div>
    </div>
  </main>
</BasePageLayout>
