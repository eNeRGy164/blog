---
import BasePageLayout from '@/layouts/BasePageLayout.astro';
import ListItem from '@/components/ListItem.astro';
import { urlifyToken, getTagsWithPosts } from '@/js/util.js'
import { SITE_TITLE, SITE_AUTHOR } from '@/config.ts'
import { getCollection } from 'astro:content';

import type { CollectionEntry } from 'astro:content';

interface Props {
  tag: string;
  posts: CollectionEntry<'posts'>[];
}

const { posts, tag } = Astro.props;

export async function getStaticPaths() {
  const tagsMap = getTagsWithPosts(await getCollection('posts'));

  return Array.from(tagsMap.entries()).map(([tag, tagPosts]) => ({
    params: {
      slug: urlifyToken(tag)
    },
    props: {
      tag: tag,
      posts: tagPosts,
    },
  }));
}

const description = `Posts tagged ‘${tag}’`;
const feed = {
  title: `${tag} Tag`,
  link: `tag/${urlifyToken(tag)}/feed.xml`
};
---

<BasePageLayout
  title={`${tag} | ${SITE_TITLE}`}
  description={description}
  classes={['archive']}
  author={SITE_AUTHOR}
  feed={feed}
>
  <main id="content" itemprop="mainEntity" itemscope itemtype="http://schema.org/CollectionPage" itemref="author">
    <div class="post-box page-box">
      <header class="post-header">
        <div class="meta">
          <h1 id="pagetitle" itemprop="name">{description}</h1>
        </div>
      </header>
      <div>
        <div class="entries" itemscope itemtype="http://schema.org/ItemList" itemprop="mainEntity">
          <meta itemprop="itemListOrder" content="http://schema.org/ItemListOrderDescending">
          <ul>
            {posts.map(p =>
              <ListItem post={p} />
            )}
          </ul>
        </div>
      </div>
    </div>
  </main>
</BasePageLayout>
