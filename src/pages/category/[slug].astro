---
import BasePageLayout from '@/layouts/BasePageLayout.astro'
import ListItem from '@/components/ListItem.astro'
import { urlifyToken, sortedPosts } from '@/js/util.js'
import { SITE_TITLE, SITE_DESCRIPTION } from '@/config.ts'

export interface Frontmatter { date: string; permalink: string; title: string; excerpt: string; updated?: string | null; categories: string[]; }
export interface Post { frontmatter: Frontmatter; }
export interface Props { posts: Post[]; category: string; }

const { posts } = Astro.props;
const category = Astro.props.category.replace('csharp', 'C#');

export async function getStaticPaths() {
  const posts : Post[] = sortedPosts(await Astro.glob('../../posts/*.{md,mdx}'))
  const categories = new Set()
  posts.forEach(post => {
    post.frontmatter.categories?.map(urlifyToken).forEach(c => categories.add(c))
  })
  return Array.from(categories).map(cat => {
    const categoryPosts = posts.filter(post => post.frontmatter.categories?.map(urlifyToken).includes(cat))
    return {
      params: { slug: cat },
      props: {
        posts: categoryPosts,
        category: categoryPosts[0].frontmatter.categories.find(x => urlifyToken(x) === cat)
      }
    }
  })
}
---

<BasePageLayout 
  title={`${category} | ${SITE_TITLE}`} 
  description={SITE_DESCRIPTION} 
  classes={['archive']}
>
  <main id="content" itemprop="mainEntity" itemscope itemtype="http://schema.org/CollectionPage" itemref="author">
    <div class="post-box page-box">
      <div class="meta">
        <h1 id="pagetitle" itemprop="name">Posts from the ‘{category}’ category</h1>
      </div>
      <div>
        <div class="entries" itemscope itemtype="http://schema.org/ItemList" itemprop="mainEntity">
          <meta itemprop="itemListOrder" content="http://schema.org/ItemListOrderDescending">
          <ul>
            {posts.map(p => 
              <ListItem post={p} />
            )}
          </ul>
        </div>
      </div>
    </div>
  </main>
</BasePageLayout>
