---
import { SITE_TITLE, SITE_KEYWORDS } from '@/config';
import '../styles/global.css';

export interface Article { published: Date; updated: Date; sections: string[]; tags: string[]; }
export interface Props { title: string; description: string; image?: string; author: string; article?: Article; feed?: { title: string; link: string; }; }

const { title, description, image = '/placeholder-social.jpg', author, article, feed } = Astro.props;

const articleKeywords = article
  ? [...(article.tags || []), ...(article.sections || [])]
  : [];

const keywords = (articleKeywords.length > 0 ? articleKeywords : SITE_KEYWORDS)
  .sort((a, b) => a.localeCompare(b))
  .join(',');
---

<meta charset="utf-8">
<meta name="viewport" content="width=device-width,initial-scale=1">
<title>{title}</title>
<meta name="author" content={author}>
<meta name="description" content={description}>
<meta name="keywords" content={keywords}>
<meta name="generator" content={Astro.generator}>

<link rel="shortcut icon" href="/favicon.ico">
<link rel="sitemap" href="/sitemap-index.xml">
<link rel="alternate" type="application/rss+xml" title={`${SITE_TITLE} » Feed`} href={new URL("feed.xml", Astro.site)}>
{feed && <link rel="alternate" type="application/rss+xml" title={`${SITE_TITLE} » ${feed.title} Feed`} href={new URL(`${feed.link}`, Astro.site)}>}

<link rel='dns-prefetch' href="https://piwik.hompus.nl">

<meta name="geo.country" content="NL">
<meta name="geo.region" content="NL-GE">
<meta name="geo.a1" content="GE">
<meta name="geo.placename" content="Nijmegen">
<meta name="dc.language" content="en">

<meta property="og:url" content={Astro.url}>
<meta property="og:title" content={title}>
<meta property="og:description" content={description}>
<meta property="og:image" content={new URL(image, Astro.url)}>
{article && (
	<meta property="og:type" content="article" />
	<meta property="article:published_time" content={article.published.toISOString()} />
	<meta property="article:modified_time" content={article.updated.toISOString()} />
)}
{article && article.sections && article.sections.map((section) =>
	<meta property="article:section" content={section}>
)}
{article && article.tags && article.tags.map((tag) =>
	<meta property="article:tag" content={tag}>
)}

<meta property="twitter:card" content="summary_large_image">
<meta name="twitter:site" content="@eNeRGy164">

<script>
  var _paq = window._paq = window._paq || [];
  _paq.push(["disableCampaignParameters"]);
  _paq.push(['trackPageView']);
  _paq.push(['enableLinkTracking']);
  (function() {
    var u="https://piwik.hompus.nl/";
    _paq.push(['setTrackerUrl', u+'matomo.php']);
    _paq.push(['setSiteId', '1']);
    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
    g.async=true; g.src=u+'matomo.js'; s.parentNode.insertBefore(g,s);
  })();
</script>
